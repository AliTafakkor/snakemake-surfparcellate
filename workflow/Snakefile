from snakebids import generate_inputs

configfile: "config/config.yml"

inputs = generate_inputs(bids_dir="", pybids_inputs=config["pybids_inputs"])

valid_inputs = inputs["func"].filter(**inputs["func"].entities["subject",])

# needed since std meshes sometimes use lh/lr instead of L/R
H_to_hemi = dict({'L': 'lh', 'R': 'rh'})

def get_hemi_label(wildcards):
    # Retrieve the mapped value for the 'hemi' wildcard from the dictionary
    return f"resources/{H_to_hemi[wildcards.hemi]}.hcp-mmp.32k_fs_LR.label.gii"

rule parcellate:
    input:
        func_gii = config['func_dir']+"/sub-{subject}/sub-{subject}_hemi-{hemi}_task-{task}_run-{run}_space-fsLR_den-32k_desc-denoised_fwhm-{fwhm}_confounds-{conf}_bold.func.gii",
        label_gii = get_hemi_label
    output:
        config['output_dir']+"/sub-{subject}/sub-{subject}_hemi-{hemi}_task-{task}_run-{run}_space-fsLR_den-32k_desc-denoised_fwhm-{fwhm}_confounds-{conf}_atlas-glasser.h5"
    script:
        "scripts/surfparc.py"

rule all:
    input:
        expand(
            valid_inputs.expand(rules.parcellate.output, allow_missing=True)
        )   
    default_target: True